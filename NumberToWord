package test;
public class NumberToWord {

  private static final String[] ones = { "", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen" };
  private static final String[] tens = { "", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety" };
  private static final String[] hundreds = { "", "thousand", "million" };

  public static String convert(int number) {
    if (number == 0) {
      return "zero";
    }

    // handle negative numbers
    if (number < 0) {
      return "negative " + convert(Math.abs(number));
    }

    String words = "";
    int place = 0;

    while (number > 0) {
      // extract hundreds digit
      int hundredValue = number / 100;
      words = hundredValue > 0 ? ones[hundredValue] + " hundred " + words : words;
      number %= 100; // remaining number

      // extract tens and ones digits
      if (number > 0) {
        if (number < 20) {
          words = ones[number] + words;
        } else {
          words = tens[number / 10] + (number % 10 > 0 ? " " + ones[number % 10] : "") + words;
        }
      }

      // add place value (thousand, million)
      if (number > 0 && place > 0) {
        words = words + " " + hundreds[place];
      }

      number /= 10; // remaining number for next iteration
      place++;
    }

    return words.trim();
  }

  public static void main(String[] args) {
    System.out.println(convert(1));   // Output: One Hundred Twenty Three
    System.out.println(convert(56));     // Output: Fifty Six
    System.out.println(convert(999));   // Output: Nine Hundred Ninety Nine
    System.out.println(convert(-789));  // Output: negative Seven Hundred Eighty Nine
  }
}
